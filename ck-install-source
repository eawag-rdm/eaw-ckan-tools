#!/bin/bash

PLUGINS="ckanext-eaw_theme ckanext_eaw_schema ckanext-eaw_vocabularies
ckanext-scheming ckanext-reapeating ckanapi ckanext-hierarchy ckanext-spatial"

PLUGINREPO="https://github.com/eawag-rdm"

UPSTREAM_BRANCH="release-v2.5.2"

usage() {
    echo "Usage: ck-install-source onlyext"
    echo "       ck-install-source <LOCAL-SOURCEDIR> <GIT-URL[@TAG]>"
    echo "The first form installs only the extensions"
    echo "Example: ck-install-source ~/ckan https://github.com/ckan/ckan.git"
    echo "Example: ck-install-source ~/Ckan/ckan git@github.com:eawag-rdm/eawag-ckan.git"
    echo
    echo "Edit the source to adapt the plugins that shoall be installed"
}

fs_setup() {
    mkdir -p ${parent}/lib   
    mkdir -p ${parent}/etc
    sudo rm /usr/lib/ckan
    sudo rm /etc/ckan
    sudo ln -s ${parent}/lib /usr/lib/ckan    
    sudo ln -s ${parent}/etc /etc/ckan
    mkdir /etc/ckan/default
    mkdir /usr/lib/ckan/default
    cp /etc/ckan-development_ini-template /etc/ckan/default/development.ini
    echo Filesystem - Setup:
    echo
    echo "Links:" 
    ls -lF /etc/ckan
    ls -lF /usr/lib/ckan
    echo
    echo "Dev. Layout:"
    tree $(realpath ${parent})
}

mk_virtenv() {
    echo Installing the virtual environment:
    echo
    virtualenv --no-site-packages /usr/lib/ckan/default
    source /usr/lib/ckan/default/bin/activate
    pip install pip-tools
    deactivate
}

install_src() {
    source /usr/lib/ckan/default/bin/activate
    echo "Installing source from ${gitsrc} ..."
    echo
    pip install -vv -e "git+${gitsrc}#egg=ckan"
    ln -s /usr/lib/ckan/default/src/ckan/who.ini /etc/ckan/default/who.ini
    deactivate
}

py-requirements() {
    echo "Installing CKAN Python requirements into virtualenv"
    echo
    source /usr/lib/ckan/default/bin/activate
    pip install -r /usr/lib/ckan/default/src/ckan/requirements.txt
    pip install -r /usr/lib/ckan/default/src/ckan/dev-requirements.txt
    deactivate
}

frontend-tools() {
    echo "Installing frontend-tools ..."
    echo
    source /usr/lib/ckan/default/bin/activate
    cd /usr/lib/ckan/default/src/ckan/
    npm install less@1.7.5 nodewatch
    deactivate
}

git-setup() {
    echo "Configuring git-repos (very EAWAG specific!) ..."
    echo
    source /usr/lib/ckan/default/bin/activate
    cd /usr/lib/ckan/default/src/ckan/
    # add remotes
    git remote add origin git@github.com:eawag-rdm/eawag-ckan.git
    git remote add upstream git@github.com:ckan/ckan.git
    # configure remotes
    git config --unset remote.origin.fetch
    git config --add remote.origin.fetch +refs/heads/master:refs/remotes/origin/master
    git config --add remote.origin.push +refs/heads/master:refs/heads/master
    #


    ##### CONTINUE HERE #######
    git config --unset remote.upstream.fetch 
    git config --add remote.upstream.fetch +refs/heads/$UPSTREAM_BRANCH:refs/remotes/upstream/$UPSTREAM_BRANCH
    git config --add remote.upstream.fetch +refs/heads/upstream_master:refs/remotes/upstream/upstream_master
    #
    # set up branches
    git fetch upstream
    git checkout -b $UPSTREAM_BRANCH upstream/$UPSTREAM_BRANCH
    git config --add branch.$UPSTREAM_BRANCH.pushremote origin
    #
    git fetch upstream
    git checkout -b ckan_master upstream/master
    git config --add branch.ckan_master.pushremote ckan-fork
    #
    git checkout master
    deactivate
}

install-extensions() {
    echo "Installing extensions"
    echo
    source /usr/lib/ckan/default/bin/activate
    for plugin in $PLUGINS; do
	cd /usr/lib/ckan/default/src
	echo "Installing ${PLUGINREPO}/${plugin}.git"
	git clone ${PLUGINREPO}/${plugin}.git
	cd $plugin
	python setup.py develop
	pip install -r requirements.txt || pip install -r pip-requirements.txt || echo "No requirements-file found."
    done
    echo "Don't forget to activate the plugins in /etc/ckan/default/development.ini"
    deactivate
}

echo "$*"
if [[ "$*" =~ .*\ -h ]]; then
    usage
    exit 0
elif [[ "$1" == "onlyext" ]]; then
    install-extensions
elif [[ $# -ne 2 ]]; then
    usage
    exit 1
else
    parent="$1"
    gitsrc="$2"
    # fs_setup
    # mk_virtenv
    # install_src
    # py-requirements
    frontend-tools
    # git-setup
    # install-extensions
fi
